#!/usr/bin/env python 
# -*- coding: utf-8 -*-


# Script for manuscript "Detecting Polygenic Adaptation For A Threshold Trait In Experimental Populations Using Time-Series Data"


#Clément BARTHÉLÉMY, La Rochelle University, Station Ifremer de La Tremblade


#====================================================================================================================
######################################  Contact : clement.barthelemy@gmail.com  #####################################
#====================================================================================================================


#====================== Packages ======================#


import math,os,time,random,sys,subprocess
import numpy as np


#====================== Path ======================#


PATHF="/home/clement/Documents/SimulationPP" #Insert your path here


#====================== Variables ======================#


nb_indiv = int(sys.argv[1]) #Number of individuals in the total population

nb_loci = int(sys.argv[2]) #Number of locii

nb_gen = int(sys.argv[3]) #Number of studied generations

rep = int(sys.argv[4]) #The repetition in which we are

nameIN=str(sys.argv[5]) #Name of the input file

nameOUT=str(sys.argv[6]) #Name of the output file


#======================  Testing if the position file already exist ======================#


if os.path.isfile(os.path.join(PATHF, "Resultats" , "Pos_LambdaStat_Pairwise.txt")):
    os.remove(os.path.join(PATHF, "Resultats" , "Pos_LambdaStat_Pairwise.txt"))


#====================== Import the data ======================#


for i in range(1,nb_gen+1,1): #Loop in order to execute this for each generation (in several diffirent file)

    gen=i

    extens=".txt"

    nfile=nameIN+str(nb_loci)+"="+str(nb_indiv)+"="+str(gen)+str(extens)

    ndata=os.path.join(PATHF, "Resultats" , "Matrice", nfile)


    obs1 = np.genfromtxt(
        ndata,                  # file name
        skip_header=0,          # lines to skip at the top
        skip_footer=0,          # lines to skip at the bottom
        delimiter=' ',          # column delimiter
        dtype='float',          # data type
        filling_values=0)       # fill missing values with 0calcul complexité d'un script


#======================  Function  ======================#


    thevector=-999*np.ones((rep))
    thematrix=-999*np.ones((nb_loci,nb_loci))

    compt=-1 #Counter for the row of each repetition (size = nb_loci-1)

    for line in range(0,nb_loci-1,1): #Loop for the line

        compt=compt+1 #Increase the counter at each line

        if (compt==nb_loci):
            compt=1

        for col in range(compt+1,nb_loci,1): #Loop for the column

            cpt=0

            if (i==1):

                pairwise=-999*np.ones((1,2))

                pairwise[0,0]=int(line)+1
                pairwise[0,1]=int(col)+1

                file_pos=open(os.path.join(PATHF, "Resultats" , "Pos_LambdaStat_Pairwise.txt"), "a")

                np.savetxt(
                    file_pos,                               # file name
                    pairwise,                               # array to save
                    #fmt='%.2f',                            # formatting, 2 digits in this case
                    delimiter=' ',                          # column delimiter
                    newline='\n')                           # new line character
                    #footer='end of file',                  # file footer
                    #comments='# ',                         # character to use for comments
                    #header='Data generated by numpy')      # file header

                file_pos.close()



            for jump in range(line,(rep*nb_loci),nb_loci):

                thevector[cpt]=obs1[jump,col]

                cpt=cpt+1

                if (cpt+1>rep):

                    cpt=0



                    nfileP=str(nameOUT)+str(nb_loci)+"="+str(nb_indiv)+"="+str(gen)+".tmp"

                    ndataP=os.path.join(PATHF, "Resultats" , nfileP)

                    file2_pos=open(ndataP, "a")

                    np.savetxt(
                        file2_pos,                              # file name
                        thevector,                              # array to save
                        #fmt='%.2f',                            # formatting, 2 digits in this case
                        delimiter=' ',                          # column delimiter
                        newline='\n')                           # new line character
                        #footer='end of file',                  # file footer
                        #comments='# ',                         # character to use for comments
                        #header='Data generated by numpy')      # file header

                    file_pos.close()



                    thematrix[line,col]=np.mean(thevector)

                    thematrix[col,line]=np.mean(thevector)


#####################################################################################################################





print "++++++++++++++++++++------------------------------ | Stats_Script.py          | --- | FAIT | ------------------+++++++++++++++++++++"





#====================================================================================================================
######################################  Contact : clement.barthelemy@gmail.com  #####################################
#====================================================================================================================